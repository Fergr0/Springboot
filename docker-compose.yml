version: '3.8'

networks:
  mired:
    ipam:
      config:
        - subnet: 182.28.0.0/16
          gateway: 182.28.0.1

services:
  db:
    image: bitnami/mongodb:latest
    container_name: mongo_DB
    networks:
      mired:
        ipv4_address: 182.28.0.11
    ports:
      - "27017:27017"
    expose:
      - 27017
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.runCommand('ping').ok"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  app-contactos:
    image: fergr01/agenda-contactos:latest
    container_name: contactosapp
    networks:
      mired:
        ipv4_address: 182.28.0.13
    expose:
      - 81  # Contenedor expone en 81
    ports:
      - "81:8081"  # Se accede en localhost:81 pero el servicio corre en 8081 dentro del contenedor
    depends_on:
      db:
        condition: service_healthy
    environment:
      SPRING_DATA_MONGODB_URI: mongodb://mongo_DB:27017/contactosDB

  app-tutorials:
    image: fergr01/tutorials2025:latest
    container_name: tutorialsapp
    networks:
      mired:
        ipv4_address: 182.28.0.12
    expose:
      - 80  # Contenedor expone en 80
    ports:
      - "80:8080"  # Se accede en localhost:80 pero el servicio corre en 8080 dentro del contenedor
    depends_on:
      db:
        condition: service_healthy
    environment:
      SPRING_DATA_MONGODB_URI: mongodb://mongo_DB:27017/tutorialsDB
